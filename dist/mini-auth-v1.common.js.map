{"version":3,"file":"mini-auth-v1.common.js","sources":["../src/lib/index.js"],"sourcesContent":["import { miniAuth } from 'miniapp-auth';\nimport { defaultSign } from 'mksign';\n\nexport const MODULE_NAME = 'mini-auth-v1';\n\nlet auth = null;\n\nexport function creatMiniAuth({\n  appid, env, url, appKey, appSecret, headers,\n} = { env: 'weapp' }) {\n  if (auth) {\n    return auth;\n  }\n\n  auth = miniAuth.create({\n    appid,\n    env,\n    tokenReqConfig: {\n      url,\n      method: 'POST',\n      headers,\n    },\n  });\n\n  auth.use('token', (ctx, next) => {\n    const { jsCode } = ctx.tokenReqData;\n    if (jsCode) {\n      if (typeof wx !== 'undefined' && wx) {\n        ctx.tokenReqData = {\n          js_code: jsCode,\n          sign: defaultSign({\n            js_code: jsCode,\n            app_key: appKey,\n          }, [appSecret]),\n          app_key: appKey,\n        };\n      }\n      if (typeof my !== 'undefined' && my) {\n        ctx.tokenReqData = {\n          auth_code: jsCode,\n          sign: defaultSign({\n            auth_code: jsCode,\n            app_key: appKey,\n          }, [appSecret]),\n          app_key: appKey,\n        };\n      }\n    }\n    next();\n  });\n  auth.use('afterToken', (ctx, next) => {\n    const { data = {}, retcode, msg } = ctx.tokenResData.data;\n    if (retcode === 200) {\n      ctx.tokenResData = data;\n      return next();\n    }\n    return next({\n      retcode,\n      msg,\n      data,\n    });\n  });\n\n  return auth;\n}\n\nexport function getToken(opts = {}) {\n  const maxRetry = 3;\n\n  return new Promise((resolve, reject) => {\n    function selfGetToken(retry) {\n      auth\n        .getToken(opts)\n        .then(res => {\n          resolve(res);\n        })\n        .catch(err => {\n          if (err.errCode === 5001 || err.errCode === 5002) {\n            if (retry >= maxRetry) {\n              reject(err);\n            } else {\n              setTimeout(() => {\n                selfGetToken(retry + 1);\n              }, 2000);\n            }\n          } else {\n            reject(err);\n          }\n        });\n    }\n    selfGetToken(0);\n  });\n}\n"],"names":["auth","env","appid","url","appKey","appSecret","headers","miniAuth","create","tokenReqConfig","method","use","ctx","next","jsCode","tokenReqData","wx","js_code","sign","defaultSign","app_key","my","auth_code","tokenResData","data","retcode","msg","opts","Promise","resolve","reject","selfGetToken","retry","getToken","then","res","err","errCode","setTimeout"],"mappings":"2YAKA,IAAIA,EAAO,qBAEX,wEAEI,CAAEC,IAAK,SADTC,IAAAA,MAAOD,IAAAA,IAAKE,IAAAA,IAAKC,IAAAA,OAAQC,IAAAA,UAAWC,IAAAA,eAEhCN,KAIJA,EAAOO,WAASC,OAAO,CACrBN,MAAAA,EACAD,IAAAA,EACAQ,eAAgB,CACdN,IAAAA,EACAO,OAAQ,OACRJ,QAAAA,MAICK,IAAI,QAAS,SAACC,EAAKC,OACdC,EAAWF,EAAIG,aAAfD,OACJA,IACgB,oBAAPE,IAAsBA,KAC/BJ,EAAIG,aAAe,CACjBE,QAASH,EACTI,KAAMC,cAAY,CAChBF,QAASH,EACTM,QAAShB,GACR,CAACC,IACJe,QAAShB,IAGK,oBAAPiB,IAAsBA,KAC/BT,EAAIG,aAAe,CACjBO,UAAWR,EACXI,KAAMC,cAAY,CAChBG,UAAWR,EACXM,QAAShB,GACR,CAACC,IACJe,QAAShB,KAIfS,MAEFb,EAAKW,IAAI,aAAc,SAACC,EAAKC,SACSD,EAAIW,aAAaC,SAA7CA,KAAAA,aAAO,KAAIC,IAAAA,QAASC,IAAAA,iBACxBD,GACFb,EAAIW,aAAeC,EACZX,KAEFA,EAAK,CACVY,QAAAA,EACAC,IAAAA,EACAF,KAAAA,MAIGxB,eAGT,eAAyB2B,yDAAO,GAG9B,WAAWC,QAAQ,SAACC,EAASC,IAC3B,SAASC,EAAaC,GACpBhC,EACGiC,SAASN,GACTO,KAAK,SAAAC,GACJN,EAAQM,WAEH,SAAAC,GACe,OAAhBA,EAAIC,SAAoC,OAAhBD,EAAIC,QAC1BL,GAXG,EAYLF,EAAOM,GAEPE,WAAW,WACTP,EAAaC,EAAQ,IACpB,KAGLF,EAAOM,KAIfL,CAAa"}