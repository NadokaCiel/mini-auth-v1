import { miniAuth } from 'miniapp-auth';
import { defaultSign } from 'mksign';

var auth=null;function creatMiniAuth(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{env:"weapp"},appid=_ref.appid,env=_ref.env,url=_ref.url,appKey=_ref.appKey,appSecret=_ref.appSecret,headers=_ref.headers;return auth?auth:(auth=miniAuth.create({appid:appid,env:env,headers:headers,tokenReqConfig:{url:url,method:"POST"}}),auth.use("token",function(ctx,next){var jsCode=ctx.tokenReqData.jsCode;jsCode&&("undefined"!=typeof wx&&wx&&(ctx.tokenReqData={js_code:jsCode,sign:defaultSign({js_code:jsCode,app_key:appKey},[appSecret]),app_key:appKey}),"undefined"!=typeof my&&my&&(ctx.tokenReqData={auth_code:jsCode,sign:defaultSign({auth_code:jsCode,app_key:appKey},[appSecret]),app_key:appKey})),next();}),auth.use("afterToken",function(ctx,next){var _ctx$tokenResData$dat=ctx.tokenResData.data,_ctx$tokenResData$dat2=_ctx$tokenResData$dat.data,data=void 0===_ctx$tokenResData$dat2?{}:_ctx$tokenResData$dat2,retcode=_ctx$tokenResData$dat.retcode,msg=_ctx$tokenResData$dat.msg;return 200===retcode?(ctx.tokenResData=data,next()):next({retcode:retcode,msg:msg,data:data})}),auth)}function getToken(){var opts=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return new Promise(function(resolve,reject){function selfGetToken(retry){auth.getToken(opts).then(function(res){resolve(res);})["catch"](function(err){5001===err.errCode||5002===err.errCode?retry>=3?reject(err):setTimeout(function(){selfGetToken(retry+1);},2e3):reject(err);});}selfGetToken(0);})}

export { creatMiniAuth, getToken };
//# sourceMappingURL=mini-auth-v1.esm.js.map
